---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cnpg-s3
  namespace: kube-system
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: secret-store
  target:
    name: cnpg-s3
    creationPolicy: Owner
  data:
    # Endpoint for S3-compatible storage
    - secretKey: AWS_S3_ENDPOINT
      remoteRef:
        key: S3_ENDPOINT
    # Access key for S3-compatible storage
    - secretKey: AWS_ACCESS_KEY_ID
      remoteRef:
        key: S3_ACCESS_KEY_ID
    # Secret key for S3-compatible storage
    - secretKey: AWS_SECRET_ACCESS_KEY
      remoteRef:
        key: S3_ACCESS_KEY_SECRET
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: windmill-db-secret
  namespace: kube-system
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: secret-store
  target:
    name: windmill-db-secret
    creationPolicy: Owner
    template:
      type: kubernetes.io/basic-auth
  data:
    - secretKey: password
      remoteRef:
        key: DB_PASSWORD
    - secretKey: username
      remoteRef:
        key: DB_USERNAME
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: windmill-db
  namespace: kube-system
spec:
  instances: 1
  primaryUpdateStrategy: unsupervised
  storage:
    size: 1Gi
  bootstrap:
    initdb:
      database: windmill
      owner: windmill
      secret:
        name: windmill-db-secret
      postInitApplicationSQLRefs:
        configMapRefs:
        - name: windmill-init-db-as-superuser
          key: init-db-as-superuser.sql
    # To discuss.
    # Would be nice to have a way to use a recovery if there is one, otherwise use the initdb.
    # recovery:
    #   source: windmill
  backup:
    barmanObjectStore:
      destinationPath: s3://my-gitops-platform/cnpg/windmill-db
      endpointURL: https://s3.eu-central-1.wasabisys.com
      serverName: "windmill-db"
      s3Credentials:
        accessKeyId:
          name: cnpg-s3
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cnpg-s3
          key: AWS_SECRET_ACCESS_KEY
    retentionPolicy: 30d
  externalClusters:
    - name: windmill
      barmanObjectStore:
        destinationPath: s3://my-gitops-platform/cnpg/windmill-db
        endpointURL: https://s3.eu-central-1.wasabisys.com
        s3Credentials:
          accessKeyId:
            name: cnpg-s3
            key: AWS_ACCESS_KEY_ID
          secretAccessKey:
            name: cnpg-s3
            key: AWS_SECRET_ACCESS_KEY
        wal:
          maxParallel: 8
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: windmill-db-url
  namespace: kube-system
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: secret-store
  target:
    name: windmill-db-url
    creationPolicy: Owner
    template:
      data:
        url: postgres://{{ .username }}:{{ .password }}@windmill-db-rw:5432/windmill
  data:
    - secretKey: password
      remoteRef:
        key: DB_PASSWORD
    - secretKey: username
      remoteRef:
        key: DB_USERNAME
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: windmill-backups
  namespace: kube-system
spec:
  immediate: true
  schedule: "0 * * * *"
  backupOwnerReference: self
  cluster:
    name: windmill-db
